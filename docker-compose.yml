services:
  postgres:
    image: postgres:15-alpine
    container_name: prefect-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prefect"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: prefect-redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  prefect-api:
    image: prefecthq/prefect:3-latest
    container_name: prefect-api
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    command: prefect server start --host 0.0.0.0 --no-services
    environment:
      PREFECT_API_DATABASE_CONNECTION_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PREFECT_MESSAGING_BROKER: prefect_redis.messaging
      PREFECT_MESSAGING_CACHE: prefect_redis.messaging
      PREFECT_SERVER_EVENTS_CAUSAL_ORDERING: prefect_redis.ordering
      PREFECT_SERVER_CONCURRENCY_LEASE_STORAGE: prefect_redis.lease_storage
      PREFECT_REDIS_MESSAGING_HOST: redis
      PREFECT_REDIS_MESSAGING_PORT: "6379"
      PREFECT_UI_API_URL: ${PREFECT_UI_API_URL:-http://localhost:4200/api}
    ports:
      - "${PREFECT_API_PORT:-4200}:4200"

  prefect-background:
    image: prefecthq/prefect:3-latest
    container_name: prefect-background
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    command: prefect server services start
    environment:
      PREFECT_API_DATABASE_CONNECTION_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PREFECT_MESSAGING_BROKER: prefect_redis.messaging
      PREFECT_MESSAGING_CACHE: prefect_redis.messaging
      PREFECT_SERVER_EVENTS_CAUSAL_ORDERING: prefect_redis.ordering
      PREFECT_SERVER_CONCURRENCY_LEASE_STORAGE: prefect_redis.lease_storage
      PREFECT_REDIS_MESSAGING_HOST: redis
      PREFECT_REDIS_MESSAGING_PORT: "6379"

  prefect-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: prefect-worker
    restart: unless-stopped
    depends_on:
      prefect-api:
        condition: service_started
    entrypoint: /bin/sh
    command: -c "sleep 15 && prefect work-pool create local-pool --type process || true && prefect worker start --pool local-pool"
    environment:
      PREFECT_API_URL: http://prefect-api:4200/api
      PYTHONPATH: /opt/prefect
    volumes:
      - .:/opt/prefect

  prefect-client:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: prefect-client
    restart: unless-stopped
    depends_on:
      prefect-api:
        condition: service_started
    entrypoint: /bin/sh
    command: -c "sleep infinity"
    environment:
      PREFECT_API_URL: http://prefect-api:4200/api
      PYTHONPATH: /opt/prefect
    volumes:
      - .:/opt/prefect
    working_dir: /opt/prefect

#  nginx:
#    image: nginx:alpine
#    container_name: prefect-nginx
#    restart: unless-stopped
#    depends_on:
#      - prefect-api
#    ports:
#      - "8080:8080"
#    volumes:
#      - ./nginx/prefect.conf:/etc/nginx/conf.d/default.conf:ro
#      - ./nginx/.htpasswd:/etc/nginx/.htpasswd:ro

volumes:
  postgres_data: